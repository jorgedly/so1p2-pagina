{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/material.module.ts","./src/app/services/connection.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ConnectionService } from './services/connection.service';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n  displayedColumns = ['nombre', 'departamento', 'edad', 'forma', 'estado'];\n  dataSource = new MatTableDataSource([]);\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  view = [600, 350];\n  departamentos = [];\n  top3 = [];\n  ultimo = {};\n  edades = [];\n  numero: number = 0;\n\n  constructor(private conn: ConnectionService) {\n  }\n\n  async ngOnInit() {\n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n    setInterval(async () => {\n      const data = await this.conn.getData();\n      this.top3 = data[\"top3\"];\n      this.departamentos = data[\"departamentos\"];\n      this.ultimo = data[\"ultimo\"];\n      this.edades = data[\"edades\"];\n      this.dataSource.data = data[\"datos\"];\n      this.numero = data[\"numero\"]\n    }, 1000);\n\n  }\n\n  async borrar() {\n    this.top3 = [];\n    this.departamentos = [];\n    this.ultimo = {};\n    this.edades = [];\n    this.dataSource.data = [];\n    this.numero = 0;\n    await this.conn.borrar();\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n\n}\n","<div class=\"columns\">\n    <div class=\"column is-one-third\">\n        <p>Datos: <b>{{numero}}</b></p>\n    </div>\n    <div class=\"column is-two-thirds\">\n        <button mat-button style=\"width: 100%\" (click)=\"borrar()\">Borrar datos</button>\n    </div>\n</div>\n<div class=\"columns\">\n    <div class=\"column\">\n        <mat-card>\n            <mat-card-header>\n                <mat-card-title>Datos</mat-card-title>\n            </mat-card-header>\n            <mat-card-content>\n                <mat-form-field color=\"primary\" style=\"width: 500px;\">\n                    <mat-label>Filtrar</mat-label>\n                    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Guatemala\">\n                </mat-form-field>\n                <table mat-table [dataSource]=\"dataSource\" matSort>\n\n                    <ng-container matColumnDef=\"nombre\">\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Nombre </th>\n                        <td mat-cell *matCellDef=\"let element\"> {{element.nombre}} </td>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"departamento\">\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Departamento </th>\n                        <td mat-cell *matCellDef=\"let element\"> {{element.departamento}} </td>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"edad\">\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Edad </th>\n                        <td mat-cell *matCellDef=\"let element\"> {{element.edad}} </td>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"forma\">\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Forma de contagio </th>\n                        <td mat-cell *matCellDef=\"let element\"> {{element.forma}} </td>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"estado\">\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Estado </th>\n                        <td mat-cell *matCellDef=\"let element\"> {{element.estado}} </td>\n                    </ng-container>\n\n                    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n                </table>\n                <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\">\n                </mat-paginator>\n            </mat-card-content>\n        </mat-card>\n    </div>\n</div>\n<div class=\"columns\">\n    <div class=\"column is-one-third\">\n        <mat-card>\n            <mat-card-header>\n                <mat-card-title>Top 3</mat-card-title>\n            </mat-card-header>\n            <mat-card-content class=\"contenido\">\n                <mat-list role=\"list\">\n                    <mat-list-item role=\"listitem\" *ngFor=\"let top of top3; index as i\">\n                        {{i+1}}) {{top.departamento}}: &nbsp;<b>{{top.cantidad}} casos</b>\n                    </mat-list-item>\n                </mat-list>\n            </mat-card-content>\n        </mat-card>\n    </div>\n    <div class=\"column is-two-thirds\">\n        <mat-card>\n            <mat-card-header>\n                <mat-card-title>Departamentos con casos</mat-card-title>\n            </mat-card-header>\n            <mat-card-content class=\"contenido\">\n                <ngx-charts-pie-chart [view]=\"view\" [results]=\"departamentos\" legend=\"true\">\n                </ngx-charts-pie-chart>\n            </mat-card-content>\n        </mat-card>\n    </div>\n</div>\n<div class=\"columns\">\n    <div class=\"column is-one-third\">\n        <mat-card>\n            <mat-card-header>\n                <mat-card-title>Ultimo caso</mat-card-title>\n            </mat-card-header>\n            <mat-card-content class=\"contenido\">\n                <mat-list role=\"list\">\n                    <mat-list-item role=\"listitem\">Nombre: &nbsp;<b>{{ultimo[\"nombre\"]}}</b></mat-list-item>\n                    <mat-list-item role=\"listitem\">Departamento: &nbsp;<b>{{ultimo[\"departamento\"]}}</b></mat-list-item>\n                    <mat-list-item role=\"listitem\">Edad: &nbsp;<b>{{ultimo[\"edad\"]}}</b></mat-list-item>\n                    <mat-list-item role=\"listitem\">Forma de contagio: &nbsp;<b>{{ultimo[\"forma\"]}}</b></mat-list-item>\n                    <mat-list-item role=\"listitem\">Estado: &nbsp;<b>{{ultimo[\"estado\"]}}</b></mat-list-item>\n                </mat-list>\n            </mat-card-content>\n        </mat-card>\n    </div>\n    <div class=\"column is-two-thirds\">\n        <mat-card>\n            <mat-card-header>\n                <mat-card-title>Casos por rango de edades</mat-card-title>\n            </mat-card-header>\n            <mat-card-content class=\"contenido\">\n                <ngx-charts-bar-horizontal [view]=\"view\" [results]=\"edades\" legend=\"true\">\n                </ngx-charts-bar-horizontal>\n            </mat-card-content>\n        </mat-card>\n    </div>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, NO_ERRORS_SCHEMA } from '@angular/core';\n\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from './material.module';\n\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    HttpClientModule,\n    NgxChartsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n  schemas: [NO_ERRORS_SCHEMA]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatListModule } from '@angular/material/list';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\n\nconst mat = [\n    MatButtonModule,\n    MatCardModule,\n    MatListModule,\n    MatTableModule,\n    MatSortModule,\n    MatPaginatorModule,\n    MatFormFieldModule,\n    MatInputModule\n];\n\n@NgModule({\n    imports: [\n        ...mat,\n    ],\n    exports: [\n        ...mat,\n    ],\n})\nexport class MaterialModule { }","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConnectionService {\n\n  url: string = 'http://34.229.161.196:3000/';\n\n  constructor(private http: HttpClient) { }\n\n  async getData() {\n    return await this.http.get(`${this.url}data`).toPromise();\n  }\n\n  async borrar() {\n    return await this.http.get(`${this.url}borrar`).toPromise();\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}