{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/material.module.ts","webpack:///src/app/services/connection.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","conn","displayedColumns","dataSource","view","departamentos","top3","ultimo","edades","numero","sort","paginator","setInterval","getData","data","borrar","event","filterValue","target","value","filter","trim","toLowerCase","applyFilter","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","schemas","mat","MaterialModule","ConnectionService","http","url","get","toPromise","providedIn","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","<div class=\"columns\">\n    <div class=\"column is-one-third\">\n        <p>Datos: <b>{{numero}}</b></p>\n    </div>\n    <div class=\"column is-two-thirds\">\n        <button mat-button style=\"width: 100%\" (click)=\"borrar()\">Borrar datos</button>\n    </div>\n</div>\n<div class=\"columns\">\n    <div class=\"column\">\n        <mat-card>\n            <mat-card-header>\n                <mat-card-title>Datos</mat-card-title>\n            </mat-card-header>\n            <mat-card-content>\n                <mat-form-field color=\"primary\" style=\"width: 500px;\">\n                    <mat-label>Filtrar</mat-label>\n                    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Guatemala\">\n                </mat-form-field>\n                <table mat-table [dataSource]=\"dataSource\" matSort>\n\n                    <ng-container matColumnDef=\"nombre\">\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Nombre </th>\n                        <td mat-cell *matCellDef=\"let element\"> {{element.nombre}} </td>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"departamento\">\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Departamento </th>\n                        <td mat-cell *matCellDef=\"let element\"> {{element.departamento}} </td>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"edad\">\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Edad </th>\n                        <td mat-cell *matCellDef=\"let element\"> {{element.edad}} </td>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"forma\">\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Forma de contagio </th>\n                        <td mat-cell *matCellDef=\"let element\"> {{element.forma}} </td>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"estado\">\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Estado </th>\n                        <td mat-cell *matCellDef=\"let element\"> {{element.estado}} </td>\n                    </ng-container>\n\n                    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n                </table>\n                <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\">\n                </mat-paginator>\n            </mat-card-content>\n        </mat-card>\n    </div>\n</div>\n<div class=\"columns\">\n    <div class=\"column is-one-third\">\n        <mat-card>\n            <mat-card-header>\n                <mat-card-title>Top 3</mat-card-title>\n            </mat-card-header>\n            <mat-card-content class=\"contenido\">\n                <mat-list role=\"list\">\n                    <mat-list-item role=\"listitem\" *ngFor=\"let top of top3; index as i\">\n                        {{i+1}}) {{top.departamento}}: &nbsp;<b>{{top.cantidad}} casos</b>\n                    </mat-list-item>\n                </mat-list>\n            </mat-card-content>\n        </mat-card>\n    </div>\n    <div class=\"column is-two-thirds\">\n        <mat-card>\n            <mat-card-header>\n                <mat-card-title>Departamentos con casos</mat-card-title>\n            </mat-card-header>\n            <mat-card-content class=\"contenido\">\n                <ngx-charts-pie-chart [view]=\"view\" [results]=\"departamentos\" legend=\"true\">\n                </ngx-charts-pie-chart>\n            </mat-card-content>\n        </mat-card>\n    </div>\n</div>\n<div class=\"columns\">\n    <div class=\"column is-one-third\">\n        <mat-card>\n            <mat-card-header>\n                <mat-card-title>Ultimo caso</mat-card-title>\n            </mat-card-header>\n            <mat-card-content class=\"contenido\">\n                <mat-list role=\"list\">\n                    <mat-list-item role=\"listitem\">Nombre: &nbsp;<b>{{ultimo[\"nombre\"]}}</b></mat-list-item>\n                    <mat-list-item role=\"listitem\">Departamento: &nbsp;<b>{{ultimo[\"departamento\"]}}</b></mat-list-item>\n                    <mat-list-item role=\"listitem\">Edad: &nbsp;<b>{{ultimo[\"edad\"]}}</b></mat-list-item>\n                    <mat-list-item role=\"listitem\">Forma de contagio: &nbsp;<b>{{ultimo[\"forma\"]}}</b></mat-list-item>\n                    <mat-list-item role=\"listitem\">Estado: &nbsp;<b>{{ultimo[\"estado\"]}}</b></mat-list-item>\n                </mat-list>\n            </mat-card-content>\n        </mat-card>\n    </div>\n    <div class=\"column is-two-thirds\">\n        <mat-card>\n            <mat-card-header>\n                <mat-card-title>Casos por rango de edades</mat-card-title>\n            </mat-card-header>\n            <mat-card-content class=\"contenido\">\n                <ngx-charts-bar-horizontal [view]=\"view\" [results]=\"edades\" legend=\"true\">\n                </ngx-charts-bar-horizontal>\n            </mat-card-content>\n        </mat-card>\n    </div>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ConnectionService } from './services/connection.service';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n  displayedColumns = ['nombre', 'departamento', 'edad', 'forma', 'estado'];\n  dataSource = new MatTableDataSource([]);\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  view = [600, 350];\n  departamentos = [];\n  top3 = [];\n  ultimo = {};\n  edades = [];\n  numero: number = 0;\n\n  constructor(private conn: ConnectionService) {\n  }\n\n  async ngOnInit() {\n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n    setInterval(async () => {\n      const data = await this.conn.getData();\n      this.top3 = data[\"top3\"];\n      this.departamentos = data[\"departamentos\"];\n      this.ultimo = data[\"ultimo\"];\n      this.edades = data[\"edades\"];\n      this.dataSource.data = data[\"datos\"];\n      this.numero = data[\"numero\"]\n    }, 1000);\n\n  }\n\n  async borrar() {\n    this.top3 = [];\n    this.departamentos = [];\n    this.ultimo = {};\n    this.edades = [];\n    this.dataSource.data = [];\n    this.numero = 0;\n    await this.conn.borrar();\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, NO_ERRORS_SCHEMA } from '@angular/core';\n\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from './material.module';\n\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    HttpClientModule,\n    NgxChartsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n  schemas: [NO_ERRORS_SCHEMA]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatListModule } from '@angular/material/list';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\n\nconst mat = [\n    MatButtonModule,\n    MatCardModule,\n    MatListModule,\n    MatTableModule,\n    MatSortModule,\n    MatPaginatorModule,\n    MatFormFieldModule,\n    MatInputModule\n];\n\n@NgModule({\n    imports: [\n        ...mat,\n    ],\n    exports: [\n        ...mat,\n    ],\n})\nexport class MaterialModule { }","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConnectionService {\n\n  url: string = 'http://34.229.161.196:3000/';\n\n  constructor(private http: HttpClient) { }\n\n  async getData() {\n    return await this.http.get(`${this.url}data`).toPromise();\n  }\n\n  async borrar() {\n    return await this.http.get(`${this.url}borrar`).toPromise();\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}